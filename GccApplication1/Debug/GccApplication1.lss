
GccApplication1.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         00000002  00800100  00000436  000004ca  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         00000436  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .bss          0000000e  00800102  00800102  000004cc  2**0
                  ALLOC
  3 .stab         000006cc  00000000  00000000  000004cc  2**2
                  CONTENTS, READONLY, DEBUGGING
  4 .stabstr      00000097  00000000  00000000  00000b98  2**0
                  CONTENTS, READONLY, DEBUGGING
  5 .comment      0000002f  00000000  00000000  00000c2f  2**0
                  CONTENTS, READONLY
  6 .debug_aranges 000000e0  00000000  00000000  00000c5e  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_info   000007d8  00000000  00000000  00000d3e  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_abbrev 0000034d  00000000  00000000  00001516  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_line   000005bb  00000000  00000000  00001863  2**0
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_frame  000001e0  00000000  00000000  00001e20  2**2
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_str    0000028d  00000000  00000000  00002000  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_loc    0000064f  00000000  00000000  0000228d  2**0
                  CONTENTS, READONLY, DEBUGGING
 13 .debug_ranges 000000b0  00000000  00000000  000028dc  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	0c 94 56 00 	jmp	0xac	; 0xac <__ctors_end>
   4:	0c 94 73 00 	jmp	0xe6	; 0xe6 <__bad_interrupt>
   8:	0c 94 73 00 	jmp	0xe6	; 0xe6 <__bad_interrupt>
   c:	0c 94 24 01 	jmp	0x248	; 0x248 <__vector_3>
  10:	0c 94 73 00 	jmp	0xe6	; 0xe6 <__bad_interrupt>
  14:	0c 94 73 00 	jmp	0xe6	; 0xe6 <__bad_interrupt>
  18:	0c 94 73 00 	jmp	0xe6	; 0xe6 <__bad_interrupt>
  1c:	0c 94 73 00 	jmp	0xe6	; 0xe6 <__bad_interrupt>
  20:	0c 94 73 00 	jmp	0xe6	; 0xe6 <__bad_interrupt>
  24:	0c 94 73 00 	jmp	0xe6	; 0xe6 <__bad_interrupt>
  28:	0c 94 73 00 	jmp	0xe6	; 0xe6 <__bad_interrupt>
  2c:	0c 94 73 00 	jmp	0xe6	; 0xe6 <__bad_interrupt>
  30:	0c 94 73 00 	jmp	0xe6	; 0xe6 <__bad_interrupt>
  34:	0c 94 73 00 	jmp	0xe6	; 0xe6 <__bad_interrupt>
  38:	0c 94 73 00 	jmp	0xe6	; 0xe6 <__bad_interrupt>
  3c:	0c 94 73 00 	jmp	0xe6	; 0xe6 <__bad_interrupt>
  40:	0c 94 73 00 	jmp	0xe6	; 0xe6 <__bad_interrupt>
  44:	0c 94 73 00 	jmp	0xe6	; 0xe6 <__bad_interrupt>
  48:	0c 94 73 00 	jmp	0xe6	; 0xe6 <__bad_interrupt>
  4c:	0c 94 73 00 	jmp	0xe6	; 0xe6 <__bad_interrupt>
  50:	0c 94 73 00 	jmp	0xe6	; 0xe6 <__bad_interrupt>
  54:	0c 94 73 00 	jmp	0xe6	; 0xe6 <__bad_interrupt>
  58:	0c 94 73 00 	jmp	0xe6	; 0xe6 <__bad_interrupt>
  5c:	0c 94 3d 01 	jmp	0x27a	; 0x27a <__vector_23>
  60:	0c 94 73 00 	jmp	0xe6	; 0xe6 <__bad_interrupt>
  64:	0c 94 73 00 	jmp	0xe6	; 0xe6 <__bad_interrupt>
  68:	0c 94 73 00 	jmp	0xe6	; 0xe6 <__bad_interrupt>
  6c:	0c 94 73 00 	jmp	0xe6	; 0xe6 <__bad_interrupt>
  70:	0c 94 73 00 	jmp	0xe6	; 0xe6 <__bad_interrupt>
  74:	0c 94 73 00 	jmp	0xe6	; 0xe6 <__bad_interrupt>
  78:	0c 94 73 00 	jmp	0xe6	; 0xe6 <__bad_interrupt>
  7c:	0c 94 73 00 	jmp	0xe6	; 0xe6 <__bad_interrupt>
  80:	0c 94 73 00 	jmp	0xe6	; 0xe6 <__bad_interrupt>
  84:	0c 94 73 00 	jmp	0xe6	; 0xe6 <__bad_interrupt>
  88:	0c 94 73 00 	jmp	0xe6	; 0xe6 <__bad_interrupt>
  8c:	0c 94 73 00 	jmp	0xe6	; 0xe6 <__bad_interrupt>
  90:	0c 94 73 00 	jmp	0xe6	; 0xe6 <__bad_interrupt>
  94:	0c 94 73 00 	jmp	0xe6	; 0xe6 <__bad_interrupt>
  98:	0c 94 73 00 	jmp	0xe6	; 0xe6 <__bad_interrupt>
  9c:	0c 94 73 00 	jmp	0xe6	; 0xe6 <__bad_interrupt>
  a0:	0c 94 73 00 	jmp	0xe6	; 0xe6 <__bad_interrupt>
  a4:	0c 94 73 00 	jmp	0xe6	; 0xe6 <__bad_interrupt>
  a8:	0c 94 73 00 	jmp	0xe6	; 0xe6 <__bad_interrupt>

000000ac <__ctors_end>:
  ac:	11 24       	eor	r1, r1
  ae:	1f be       	out	0x3f, r1	; 63
  b0:	cf ef       	ldi	r28, 0xFF	; 255
  b2:	da e0       	ldi	r29, 0x0A	; 10
  b4:	de bf       	out	0x3e, r29	; 62
  b6:	cd bf       	out	0x3d, r28	; 61

000000b8 <__do_copy_data>:
  b8:	11 e0       	ldi	r17, 0x01	; 1
  ba:	a0 e0       	ldi	r26, 0x00	; 0
  bc:	b1 e0       	ldi	r27, 0x01	; 1
  be:	e6 e3       	ldi	r30, 0x36	; 54
  c0:	f4 e0       	ldi	r31, 0x04	; 4
  c2:	02 c0       	rjmp	.+4      	; 0xc8 <__do_copy_data+0x10>
  c4:	05 90       	lpm	r0, Z+
  c6:	0d 92       	st	X+, r0
  c8:	a2 30       	cpi	r26, 0x02	; 2
  ca:	b1 07       	cpc	r27, r17
  cc:	d9 f7       	brne	.-10     	; 0xc4 <__do_copy_data+0xc>

000000ce <__do_clear_bss>:
  ce:	21 e0       	ldi	r18, 0x01	; 1
  d0:	a2 e0       	ldi	r26, 0x02	; 2
  d2:	b1 e0       	ldi	r27, 0x01	; 1
  d4:	01 c0       	rjmp	.+2      	; 0xd8 <.do_clear_bss_start>

000000d6 <.do_clear_bss_loop>:
  d6:	1d 92       	st	X+, r1

000000d8 <.do_clear_bss_start>:
  d8:	a0 31       	cpi	r26, 0x10	; 16
  da:	b2 07       	cpc	r27, r18
  dc:	e1 f7       	brne	.-8      	; 0xd6 <.do_clear_bss_loop>
  de:	0e 94 79 00 	call	0xf2	; 0xf2 <main>
  e2:	0c 94 19 02 	jmp	0x432	; 0x432 <_exit>

000000e6 <__bad_interrupt>:
  e6:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

000000ea <turnOnBlueLED>:
    }
}

void turnOnBlueLED(void)
{
	set(PORTD,5);
  ea:	5d 9a       	sbi	0x0b, 5	; 11
  ec:	08 95       	ret

000000ee <turnOffBlueLED>:
}

void turnOffBlueLED(void)
{
	clear(PORTD,5);
  ee:	5d 98       	cbi	0x0b, 5	; 11
  f0:	08 95       	ret

000000f2 <main>:


int main(void)
{

	m_bus_init();
  f2:	0e 94 51 01 	call	0x2a2	; 0x2a2 <m_bus_init>
	m_rf_open(CHANNEL_SYSTEM,ALEX_ADDRESS_SYSTEM,PACKET_LENGTH_SYSTEM);
  f6:	4a e0       	ldi	r20, 0x0A	; 10
  f8:	62 e4       	ldi	r22, 0x42	; 66
  fa:	81 e0       	ldi	r24, 0x01	; 1
  fc:	0e 94 62 01 	call	0x2c4	; 0x2c4 <m_rf_open>
	m_red(OFF);
 100:	6e 9a       	sbi	0x0d, 6	; 13
 102:	76 9a       	sbi	0x0e, 6	; 14
	m_green(OFF);
 104:	6a 9a       	sbi	0x0d, 2	; 13
 106:	72 9a       	sbi	0x0e, 2	; 14
	sei();
 108:	78 94       	sei
	 
    while(1)
    {
		if (flag_system == 1)
		{            
			m_red(TOGGLE);
 10a:	68 94       	set
 10c:	cc 24       	eor	r12, r12
 10e:	c6 f8       	bld	r12, 6
			m_rf_read(buffer_rec,PACKET_LENGTH_SYSTEM);
			state = SYSTEM_STATE;
 110:	03 e6       	ldi	r16, 0x63	; 99
 112:	10 e0       	ldi	r17, 0x00	; 0
			flag_system = 0;
			
		}
		if (GO == 1)
			m_green(TOGGLE);
 114:	68 94       	set
 116:	dd 24       	eor	r13, r13
 118:	d2 f8       	bld	r13, 2
			// --------------------------------------------------------------
			case BLUE_LED_STATE:
			turnOnBlueLED();
			m_wait(3000);
			turnOffBlueLED();
			state = STOP_STATE;
 11a:	c5 e1       	ldi	r28, 0x15	; 21
 11c:	d0 e0       	ldi	r29, 0x00	; 0
			case SYSTEM_STATE:
				switch (buffer_rec[0])
				{
					//Comm test
					case 0xA0:
					state = BLUE_LED_STATE;
 11e:	0f 2e       	mov	r0, r31
 120:	f6 e1       	ldi	r31, 0x16	; 22
 122:	ef 2e       	mov	r14, r31
 124:	f1 2c       	mov	r15, r1
 126:	f0 2d       	mov	r31, r0
	m_green(OFF);
	sei();
	 
    while(1)
    {
		if (flag_system == 1)
 128:	80 91 0e 01 	lds	r24, 0x010E
 12c:	90 91 0f 01 	lds	r25, 0x010F
 130:	01 97       	sbiw	r24, 0x01	; 1
 132:	89 f4       	brne	.+34     	; 0x156 <main+0x64>
		{            
			m_red(TOGGLE);
 134:	6e 9a       	sbi	0x0d, 6	; 13
 136:	8e b1       	in	r24, 0x0e	; 14
 138:	8c 25       	eor	r24, r12
 13a:	8e b9       	out	0x0e, r24	; 14
			m_rf_read(buffer_rec,PACKET_LENGTH_SYSTEM);
 13c:	6a e0       	ldi	r22, 0x0A	; 10
 13e:	82 e0       	ldi	r24, 0x02	; 2
 140:	91 e0       	ldi	r25, 0x01	; 1
 142:	0e 94 b8 01 	call	0x370	; 0x370 <m_rf_read>
			state = SYSTEM_STATE;
 146:	10 93 01 01 	sts	0x0101, r17
 14a:	00 93 00 01 	sts	0x0100, r16
			flag_system = 0;
 14e:	10 92 0f 01 	sts	0x010F, r1
 152:	10 92 0e 01 	sts	0x010E, r1
			
		}
		if (GO == 1)
 156:	80 91 0c 01 	lds	r24, 0x010C
 15a:	90 91 0d 01 	lds	r25, 0x010D
 15e:	01 97       	sbiw	r24, 0x01	; 1
 160:	09 f4       	brne	.+2      	; 0x164 <main+0x72>
			m_green(TOGGLE);
 162:	6a 9a       	sbi	0x0d, 2	; 13
 164:	8e b1       	in	r24, 0x0e	; 14
 166:	8d 25       	eor	r24, r13
 168:	8e b9       	out	0x0e, r24	; 14
		
        switch (state)
 16a:	80 91 00 01 	lds	r24, 0x0100
 16e:	90 91 01 01 	lds	r25, 0x0101
 172:	86 31       	cpi	r24, 0x16	; 22
 174:	91 05       	cpc	r25, r1
 176:	09 f4       	brne	.+2      	; 0x17a <main+0x88>
 178:	52 c0       	rjmp	.+164    	; 0x21e <main+0x12c>
 17a:	83 36       	cpi	r24, 0x63	; 99
 17c:	91 05       	cpc	r25, r1
 17e:	19 f0       	breq	.+6      	; 0x186 <main+0x94>
 180:	45 97       	sbiw	r24, 0x15	; 21
 182:	91 f6       	brne	.-92     	; 0x128 <main+0x36>
 184:	5e c0       	rjmp	.+188    	; 0x242 <main+0x150>
        {
			case INITIAL_STATE:
				;
				break;
			case SYSTEM_STATE:
				switch (buffer_rec[0])
 186:	80 91 02 01 	lds	r24, 0x0102
 18a:	84 3a       	cpi	r24, 0xA4	; 164
 18c:	c9 f1       	breq	.+114    	; 0x200 <main+0x10e>
 18e:	28 f4       	brcc	.+10     	; 0x19a <main+0xa8>
 190:	80 3a       	cpi	r24, 0xA0	; 160
 192:	41 f0       	breq	.+16     	; 0x1a4 <main+0xb2>
 194:	81 3a       	cpi	r24, 0xA1	; 161
 196:	41 f6       	brne	.-112    	; 0x128 <main+0x36>
 198:	1b c0       	rjmp	.+54     	; 0x1d0 <main+0xde>
 19a:	86 3a       	cpi	r24, 0xA6	; 166
 19c:	b1 f1       	breq	.+108    	; 0x20a <main+0x118>
 19e:	87 3a       	cpi	r24, 0xA7	; 167
 1a0:	19 f6       	brne	.-122    	; 0x128 <main+0x36>
 1a2:	38 c0       	rjmp	.+112    	; 0x214 <main+0x122>
				{
					//Comm test
					case 0xA0:
					state = BLUE_LED_STATE;
 1a4:	f0 92 01 01 	sts	0x0101, r15
 1a8:	e0 92 00 01 	sts	0x0100, r14
					m_red(TOGGLE);
 1ac:	6e 9a       	sbi	0x0d, 6	; 13
 1ae:	8e b1       	in	r24, 0x0e	; 14
 1b0:	8c 25       	eor	r24, r12
 1b2:	8e b9       	out	0x0e, r24	; 14
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
 1b4:	2f ed       	ldi	r18, 0xDF	; 223
 1b6:	83 e9       	ldi	r24, 0x93	; 147
 1b8:	94 e0       	ldi	r25, 0x04	; 4
 1ba:	21 50       	subi	r18, 0x01	; 1
 1bc:	80 40       	sbci	r24, 0x00	; 0
 1be:	90 40       	sbci	r25, 0x00	; 0
 1c0:	e1 f7       	brne	.-8      	; 0x1ba <main+0xc8>
 1c2:	00 c0       	rjmp	.+0      	; 0x1c4 <main+0xd2>
 1c4:	00 00       	nop
					m_wait(1500);
					m_red(TOGGLE);
 1c6:	6e 9a       	sbi	0x0d, 6	; 13
 1c8:	8e b1       	in	r24, 0x0e	; 14
 1ca:	8c 25       	eor	r24, r12
 1cc:	8e b9       	out	0x0e, r24	; 14
 1ce:	ac cf       	rjmp	.-168    	; 0x128 <main+0x36>
					//pause_bool = 0;
					//}else
					//{
					//state = INITIAL_STATE;
					//}.
					state = INITIAL_STATE;
 1d0:	10 92 01 01 	sts	0x0101, r1
 1d4:	10 92 00 01 	sts	0x0100, r1
					turnOnBlueLED();
 1d8:	0e 94 75 00 	call	0xea	; 0xea <turnOnBlueLED>
					m_green(TOGGLE);
 1dc:	6a 9a       	sbi	0x0d, 2	; 13
 1de:	8e b1       	in	r24, 0x0e	; 14
 1e0:	8d 25       	eor	r24, r13
 1e2:	8e b9       	out	0x0e, r24	; 14
 1e4:	2f ed       	ldi	r18, 0xDF	; 223
 1e6:	83 e9       	ldi	r24, 0x93	; 147
 1e8:	94 e0       	ldi	r25, 0x04	; 4
 1ea:	21 50       	subi	r18, 0x01	; 1
 1ec:	80 40       	sbci	r24, 0x00	; 0
 1ee:	90 40       	sbci	r25, 0x00	; 0
 1f0:	e1 f7       	brne	.-8      	; 0x1ea <main+0xf8>
 1f2:	00 c0       	rjmp	.+0      	; 0x1f4 <main+0x102>
 1f4:	00 00       	nop
					m_wait(1500);
					m_green(TOGGLE);
 1f6:	6a 9a       	sbi	0x0d, 2	; 13
 1f8:	8e b1       	in	r24, 0x0e	; 14
 1fa:	8d 25       	eor	r24, r13
 1fc:	8e b9       	out	0x0e, r24	; 14
 1fe:	94 cf       	rjmp	.-216    	; 0x128 <main+0x36>
					break;
				
					//Pause
					case 0xA4:
					state = STOP_STATE;
 200:	d0 93 01 01 	sts	0x0101, r29
 204:	c0 93 00 01 	sts	0x0100, r28
					break;
 208:	8f cf       	rjmp	.-226    	; 0x128 <main+0x36>
				
					//Halftime
					case 0xA6:
					state = STOP_STATE;
 20a:	d0 93 01 01 	sts	0x0101, r29
 20e:	c0 93 00 01 	sts	0x0100, r28
					break;
 212:	8a cf       	rjmp	.-236    	; 0x128 <main+0x36>
					
					//Game over
					case 0xA7:
					state = STOP_STATE;
 214:	d0 93 01 01 	sts	0x0101, r29
 218:	c0 93 00 01 	sts	0x0100, r28
					break;
 21c:	85 cf       	rjmp	.-246    	; 0x128 <main+0x36>
			
			// --------------------------------------------------------------
			// BLUE LED STATE
			// --------------------------------------------------------------
			case BLUE_LED_STATE:
			turnOnBlueLED();
 21e:	0e 94 75 00 	call	0xea	; 0xea <turnOnBlueLED>
 222:	2f eb       	ldi	r18, 0xBF	; 191
 224:	87 e2       	ldi	r24, 0x27	; 39
 226:	99 e0       	ldi	r25, 0x09	; 9
 228:	21 50       	subi	r18, 0x01	; 1
 22a:	80 40       	sbci	r24, 0x00	; 0
 22c:	90 40       	sbci	r25, 0x00	; 0
 22e:	e1 f7       	brne	.-8      	; 0x228 <main+0x136>
 230:	00 c0       	rjmp	.+0      	; 0x232 <main+0x140>
 232:	00 00       	nop
			m_wait(3000);
			turnOffBlueLED();
 234:	0e 94 77 00 	call	0xee	; 0xee <turnOffBlueLED>
			state = STOP_STATE;
 238:	d0 93 01 01 	sts	0x0101, r29
 23c:	c0 93 00 01 	sts	0x0100, r28
			break;
 240:	73 cf       	rjmp	.-282    	; 0x128 <main+0x36>
			
			// --------------------------------------------------------------
			// STOP STATE
			// --------------------------------------------------------------
			case STOP_STATE:
			turnOffBlueLED();
 242:	0e 94 77 00 	call	0xee	; 0xee <turnOffBlueLED>
			break;
 246:	70 cf       	rjmp	.-288    	; 0x128 <main+0x36>

00000248 <__vector_3>:
	TCNT0 = 0;
	
}

ISR(INT2_vect)
{
 248:	1f 92       	push	r1
 24a:	0f 92       	push	r0
 24c:	0f b6       	in	r0, 0x3f	; 63
 24e:	0f 92       	push	r0
 250:	11 24       	eor	r1, r1
 252:	8f 93       	push	r24
 254:	9f 93       	push	r25
	//Read
	//past_state = state;
	//state = SYSTEM_STATE;
	flag_system = 1;
 256:	81 e0       	ldi	r24, 0x01	; 1
 258:	90 e0       	ldi	r25, 0x00	; 0
 25a:	90 93 0f 01 	sts	0x010F, r25
 25e:	80 93 0e 01 	sts	0x010E, r24
	m_green(TOGGLE); // Indicator receiving from RF
 262:	6a 9a       	sbi	0x0d, 2	; 13
 264:	9e b1       	in	r25, 0x0e	; 14
 266:	84 e0       	ldi	r24, 0x04	; 4
 268:	89 27       	eor	r24, r25
 26a:	8e b9       	out	0x0e, r24	; 14
}
 26c:	9f 91       	pop	r25
 26e:	8f 91       	pop	r24
 270:	0f 90       	pop	r0
 272:	0f be       	out	0x3f, r0	; 63
 274:	0f 90       	pop	r0
 276:	1f 90       	pop	r1
 278:	18 95       	reti

0000027a <__vector_23>:

ISR(TIMER0_OVF_vect){
 27a:	1f 92       	push	r1
 27c:	0f 92       	push	r0
 27e:	0f b6       	in	r0, 0x3f	; 63
 280:	0f 92       	push	r0
 282:	11 24       	eor	r1, r1
 284:	8f 93       	push	r24
 286:	9f 93       	push	r25
	GO = 1;
 288:	81 e0       	ldi	r24, 0x01	; 1
 28a:	90 e0       	ldi	r25, 0x00	; 0
 28c:	90 93 0d 01 	sts	0x010D, r25
 290:	80 93 0c 01 	sts	0x010C, r24
}
 294:	9f 91       	pop	r25
 296:	8f 91       	pop	r24
 298:	0f 90       	pop	r0
 29a:	0f be       	out	0x3f, r0	; 63
 29c:	0f 90       	pop	r0
 29e:	1f 90       	pop	r1
 2a0:	18 95       	reti

000002a2 <m_bus_init>:
 2a2:	58 9a       	sbi	0x0b, 0	; 11
 2a4:	59 9a       	sbi	0x0b, 1	; 11
 2a6:	5a 9a       	sbi	0x0b, 2	; 11
 2a8:	8c e0       	ldi	r24, 0x0C	; 12
 2aa:	80 93 b8 00 	sts	0x00B8, r24
 2ae:	e9 e6       	ldi	r30, 0x69	; 105
 2b0:	f0 e0       	ldi	r31, 0x00	; 0
 2b2:	80 81       	ld	r24, Z
 2b4:	80 62       	ori	r24, 0x20	; 32
 2b6:	80 83       	st	Z, r24
 2b8:	80 81       	ld	r24, Z
 2ba:	8f 7e       	andi	r24, 0xEF	; 239
 2bc:	80 83       	st	Z, r24
 2be:	ea 9a       	sbi	0x1d, 2	; 29
 2c0:	78 94       	sei
 2c2:	08 95       	ret

000002c4 <m_rf_open>:
 2c4:	1f 93       	push	r17
 2c6:	cf 93       	push	r28
 2c8:	df 93       	push	r29
 2ca:	18 2f       	mov	r17, r24
 2cc:	d6 2f       	mov	r29, r22
 2ce:	c4 2f       	mov	r28, r20
 2d0:	0e 94 51 01 	call	0x2a2	; 0x2a2 <m_bus_init>
 2d4:	94 ea       	ldi	r25, 0xA4	; 164
 2d6:	90 93 bc 00 	sts	0x00BC, r25
 2da:	ec eb       	ldi	r30, 0xBC	; 188
 2dc:	f0 e0       	ldi	r31, 0x00	; 0
 2de:	90 81       	ld	r25, Z
 2e0:	99 23       	and	r25, r25
 2e2:	ec f7       	brge	.-6      	; 0x2de <m_rf_open+0x1a>
 2e4:	90 e5       	ldi	r25, 0x50	; 80
 2e6:	90 93 bb 00 	sts	0x00BB, r25
 2ea:	94 e8       	ldi	r25, 0x84	; 132
 2ec:	90 93 bc 00 	sts	0x00BC, r25
 2f0:	ec eb       	ldi	r30, 0xBC	; 188
 2f2:	f0 e0       	ldi	r31, 0x00	; 0
 2f4:	90 81       	ld	r25, Z
 2f6:	99 23       	and	r25, r25
 2f8:	ec f7       	brge	.-6      	; 0x2f4 <m_rf_open+0x30>
 2fa:	90 91 b9 00 	lds	r25, 0x00B9
 2fe:	98 7f       	andi	r25, 0xF8	; 248
 300:	90 32       	cpi	r25, 0x20	; 32
 302:	29 f4       	brne	.+10     	; 0x30e <m_rf_open+0x4a>
 304:	84 e9       	ldi	r24, 0x94	; 148
 306:	80 93 bc 00 	sts	0x00BC, r24
 30a:	80 e0       	ldi	r24, 0x00	; 0
 30c:	2d c0       	rjmp	.+90     	; 0x368 <m_rf_open+0xa4>
 30e:	81 e0       	ldi	r24, 0x01	; 1
 310:	80 93 bb 00 	sts	0x00BB, r24
 314:	84 e8       	ldi	r24, 0x84	; 132
 316:	80 93 bc 00 	sts	0x00BC, r24
 31a:	ec eb       	ldi	r30, 0xBC	; 188
 31c:	f0 e0       	ldi	r31, 0x00	; 0
 31e:	90 81       	ld	r25, Z
 320:	99 23       	and	r25, r25
 322:	ec f7       	brge	.-6      	; 0x31e <m_rf_open+0x5a>
 324:	10 93 bb 00 	sts	0x00BB, r17
 328:	84 e8       	ldi	r24, 0x84	; 132
 32a:	80 93 bc 00 	sts	0x00BC, r24
 32e:	ec eb       	ldi	r30, 0xBC	; 188
 330:	f0 e0       	ldi	r31, 0x00	; 0
 332:	80 81       	ld	r24, Z
 334:	88 23       	and	r24, r24
 336:	ec f7       	brge	.-6      	; 0x332 <m_rf_open+0x6e>
 338:	d0 93 bb 00 	sts	0x00BB, r29
 33c:	84 e8       	ldi	r24, 0x84	; 132
 33e:	80 93 bc 00 	sts	0x00BC, r24
 342:	ec eb       	ldi	r30, 0xBC	; 188
 344:	f0 e0       	ldi	r31, 0x00	; 0
 346:	80 81       	ld	r24, Z
 348:	88 23       	and	r24, r24
 34a:	ec f7       	brge	.-6      	; 0x346 <m_rf_open+0x82>
 34c:	c0 93 bb 00 	sts	0x00BB, r28
 350:	84 e8       	ldi	r24, 0x84	; 132
 352:	80 93 bc 00 	sts	0x00BC, r24
 356:	ec eb       	ldi	r30, 0xBC	; 188
 358:	f0 e0       	ldi	r31, 0x00	; 0
 35a:	80 81       	ld	r24, Z
 35c:	88 23       	and	r24, r24
 35e:	ec f7       	brge	.-6      	; 0x35a <m_rf_open+0x96>
 360:	84 e9       	ldi	r24, 0x94	; 148
 362:	80 93 bc 00 	sts	0x00BC, r24
 366:	81 e0       	ldi	r24, 0x01	; 1
 368:	df 91       	pop	r29
 36a:	cf 91       	pop	r28
 36c:	1f 91       	pop	r17
 36e:	08 95       	ret

00000370 <m_rf_read>:
 370:	cf 93       	push	r28
 372:	df 93       	push	r29
 374:	24 ea       	ldi	r18, 0xA4	; 164
 376:	20 93 bc 00 	sts	0x00BC, r18
 37a:	ec eb       	ldi	r30, 0xBC	; 188
 37c:	f0 e0       	ldi	r31, 0x00	; 0
 37e:	20 81       	ld	r18, Z
 380:	22 23       	and	r18, r18
 382:	ec f7       	brge	.-6      	; 0x37e <m_rf_read+0xe>
 384:	21 e5       	ldi	r18, 0x51	; 81
 386:	20 93 bb 00 	sts	0x00BB, r18
 38a:	24 e8       	ldi	r18, 0x84	; 132
 38c:	20 93 bc 00 	sts	0x00BC, r18
 390:	ec eb       	ldi	r30, 0xBC	; 188
 392:	f0 e0       	ldi	r31, 0x00	; 0
 394:	20 81       	ld	r18, Z
 396:	22 23       	and	r18, r18
 398:	ec f7       	brge	.-6      	; 0x394 <m_rf_read+0x24>
 39a:	20 91 b9 00 	lds	r18, 0x00B9
 39e:	28 7f       	andi	r18, 0xF8	; 248
 3a0:	28 34       	cpi	r18, 0x48	; 72
 3a2:	29 f4       	brne	.+10     	; 0x3ae <m_rf_read+0x3e>
 3a4:	84 e9       	ldi	r24, 0x94	; 148
 3a6:	80 93 bc 00 	sts	0x00BC, r24
 3aa:	80 e0       	ldi	r24, 0x00	; 0
 3ac:	3f c0       	rjmp	.+126    	; 0x42c <m_rf_read+0xbc>
 3ae:	24 ec       	ldi	r18, 0xC4	; 196
 3b0:	20 93 bc 00 	sts	0x00BC, r18
 3b4:	ec eb       	ldi	r30, 0xBC	; 188
 3b6:	f0 e0       	ldi	r31, 0x00	; 0
 3b8:	20 81       	ld	r18, Z
 3ba:	22 23       	and	r18, r18
 3bc:	ec f7       	brge	.-6      	; 0x3b8 <m_rf_read+0x48>
 3be:	40 91 bb 00 	lds	r20, 0x00BB
 3c2:	46 13       	cpse	r20, r22
 3c4:	09 c0       	rjmp	.+18     	; 0x3d8 <m_rf_read+0x68>
 3c6:	50 e0       	ldi	r21, 0x00	; 0
 3c8:	41 50       	subi	r20, 0x01	; 1
 3ca:	51 09       	sbc	r21, r1
 3cc:	14 16       	cp	r1, r20
 3ce:	15 06       	cpc	r1, r21
 3d0:	44 f0       	brlt	.+16     	; 0x3e2 <m_rf_read+0x72>
 3d2:	40 e0       	ldi	r20, 0x00	; 0
 3d4:	50 e0       	ldi	r21, 0x00	; 0
 3d6:	18 c0       	rjmp	.+48     	; 0x408 <m_rf_read+0x98>
 3d8:	84 e9       	ldi	r24, 0x94	; 148
 3da:	80 93 bc 00 	sts	0x00BC, r24
 3de:	80 e0       	ldi	r24, 0x00	; 0
 3e0:	25 c0       	rjmp	.+74     	; 0x42c <m_rf_read+0xbc>
 3e2:	dc 01       	movw	r26, r24
 3e4:	20 e0       	ldi	r18, 0x00	; 0
 3e6:	30 e0       	ldi	r19, 0x00	; 0
 3e8:	ec eb       	ldi	r30, 0xBC	; 188
 3ea:	f0 e0       	ldi	r31, 0x00	; 0
 3ec:	74 ec       	ldi	r23, 0xC4	; 196
 3ee:	cb eb       	ldi	r28, 0xBB	; 187
 3f0:	d0 e0       	ldi	r29, 0x00	; 0
 3f2:	70 83       	st	Z, r23
 3f4:	60 81       	ld	r22, Z
 3f6:	66 23       	and	r22, r22
 3f8:	ec f7       	brge	.-6      	; 0x3f4 <m_rf_read+0x84>
 3fa:	68 81       	ld	r22, Y
 3fc:	6d 93       	st	X+, r22
 3fe:	2f 5f       	subi	r18, 0xFF	; 255
 400:	3f 4f       	sbci	r19, 0xFF	; 255
 402:	24 17       	cp	r18, r20
 404:	35 07       	cpc	r19, r21
 406:	ac f3       	brlt	.-22     	; 0x3f2 <m_rf_read+0x82>
 408:	24 e8       	ldi	r18, 0x84	; 132
 40a:	20 93 bc 00 	sts	0x00BC, r18
 40e:	ec eb       	ldi	r30, 0xBC	; 188
 410:	f0 e0       	ldi	r31, 0x00	; 0
 412:	20 81       	ld	r18, Z
 414:	22 23       	and	r18, r18
 416:	ec f7       	brge	.-6      	; 0x412 <m_rf_read+0xa2>
 418:	20 91 bb 00 	lds	r18, 0x00BB
 41c:	fc 01       	movw	r30, r24
 41e:	e4 0f       	add	r30, r20
 420:	f5 1f       	adc	r31, r21
 422:	20 83       	st	Z, r18
 424:	84 e9       	ldi	r24, 0x94	; 148
 426:	80 93 bc 00 	sts	0x00BC, r24
 42a:	81 e0       	ldi	r24, 0x01	; 1
 42c:	df 91       	pop	r29
 42e:	cf 91       	pop	r28
 430:	08 95       	ret

00000432 <_exit>:
 432:	f8 94       	cli

00000434 <__stop_program>:
 434:	ff cf       	rjmp	.-2      	; 0x434 <__stop_program>
